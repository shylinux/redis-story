{
  "003be61e1e2a998fa586b1ef5cd1896f": {
    "meta": {
      "command": "mset",
      "name": "key value [key value ...]",
      "text": "Set multiple keys to multiple values",
      "time": "2024-04-23 23:11:42.726",
      "type": "string"
    }
  },
  "0156fb0199021d38dfb624016b48a921": {
    "meta": {
      "command": "zinterstore",
      "name": "destination numkeys key [key ...] [WEIGHTS weight] [AGGREGATE SUM|MIN|MAX]",
      "text": "Intersect multiple sorted sets and store the resulting sorted set in a new key",
      "time": "2024-04-23 23:21:02.571",
      "type": "sorted_set"
    }
  },
  "027470c81cd245c5251895e60cf006c2": {
    "meta": {
      "command": "rpoplpush",
      "name": "source destination",
      "text": "Remove the last element in a list, prepend it to another list and return it",
      "time": "2024-04-23 23:09:06.166",
      "type": "list"
    }
  },
  "03167f53759c9973029ee760e1f737e0": {
    "meta": {
      "command": "restore-asking",
      "time": "2024-04-24 08:07:58.954",
      "type": "server"
    }
  },
  "040f8e6525bd0c62798afb41e6644f37": {
    "meta": {
      "command": "pubsub",
      "time": "2024-04-24 00:04:23.245",
      "type": "command"
    }
  },
  "0472d7202ae12f198ad78054dcef97be": {
    "meta": {
      "command": "pexpireat",
      "name": "key milliseconds-timestamp",
      "text": "Set the expiration for a key as a UNIX timestamp specified in milliseconds",
      "time": "2024-04-23 23:11:57.125",
      "type": "generic"
    }
  },
  "05a208028929fd77cfb5b08096a837df": {
    "meta": {
      "command": "lolwut",
      "time": "2024-04-24 08:10:34.406",
      "type": "server"
    }
  },
  "06b2d4b91b5c9eaa8c20a1c270f95b3c": {
    "meta": {
      "command": "cluster",
      "time": "2024-04-24 08:14:47.479",
      "type": "cluster"
    }
  },
  "07003ecef908c7f5253d28803fcf0f68": {
    "meta": {
      "command": "substr",
      "name": "key arg arg",
      "text": "Help not available",
      "time": "2024-04-23 23:14:32.427",
      "type": "generic"
    }
  },
  "08297d6f4303a1e1c00e966d3065906e": {
    "meta": {
      "command": "zrevrank",
      "name": "key member",
      "text": "Determine the index of a member in a sorted set, with scores ordered from high to low",
      "time": "2024-04-23 23:21:43.395",
      "type": "sorted_set"
    }
  },
  "085e3a62faebf6d58e985373a8b07529": {
    "meta": {
      "command": "hstrlen",
      "name": "key field",
      "text": "Get the length of the value of a hash field",
      "time": "2024-04-23 23:18:45.337",
      "type": "hash"
    }
  },
  "08b5411f848a2581a41672a759c87380": {
    "meta": {
      "command": "monitor",
      "name": "-",
      "text": "Listen for all requests received by the server in real time",
      "time": "2024-04-23 23:37:40.096",
      "type": "server"
    }
  },
  "08e19cf1b14354fa5cd428a5f7c3d56e": {
    "meta": {
      "command": "lset",
      "name": "key index value",
      "text": "Set the value of an element in a list by its index",
      "time": "2024-04-23 23:11:29.083",
      "type": "list"
    }
  },
  "09f55e5f95d3dae56cbdc8d51fe63be2": {
    "meta": {
      "command": "lpush",
      "name": "key value [value ...]",
      "text": "Prepend one or multiple values to a list",
      "time": "2024-04-23 23:11:15.224",
      "type": "list"
    }
  },
  "0a0b716ebb7afa13ee0fc64df96fec32": {
    "meta": {
      "command": "lindex",
      "name": "key index",
      "text": "Get an element from a list by its index",
      "time": "2024-04-23 23:19:03.888",
      "type": "list"
    }
  },
  "0a9de990ecca7d35c18f65aec3e88fc3": {
    "meta": {
      "command": "hmget",
      "name": "key field [field ...]",
      "text": "Get the values of all the given hash fields",
      "time": "2024-04-23 23:18:33.035",
      "type": "hash"
    }
  },
  "0c856ed706d7fc4d408af8b429130a2d": {
    "meta": {
      "command": "dbsize",
      "name": "-",
      "text": "Return the number of keys in the selected database",
      "time": "2024-04-23 23:17:12.787",
      "type": "server"
    }
  },
  "0c9154e1026018c1cea29e1d99f14b6e": {
    "meta": {
      "command": "xrevrange",
      "name": "key end start [COUNT count]",
      "text": "Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE",
      "time": "2024-04-23 23:20:45.477",
      "type": "stream"
    }
  },
  "0ecebfd7dc00ae2bfd73b71e3e944984": {
    "meta": {
      "command": "zincrby",
      "name": "key increment member",
      "text": "Increment the score of a member in a sorted set",
      "time": "2024-04-23 23:20:59.821",
      "type": "sorted_set"
    }
  },
  "12a25b5ca103b8eecd4bad69693e2540": {
    "meta": {
      "command": "time",
      "name": "-",
      "text": "Return the current server time",
      "time": "2024-04-23 23:20:06.843",
      "type": "server"
    }
  },
  "12b8fc8329e93622bfc17a8456903b33": {
    "meta": {
      "command": "rpush",
      "name": "key value [value ...]",
      "text": "Append one or multiple values to a list",
      "time": "2024-04-23 23:09:02.477",
      "type": "list"
    }
  },
  "1436e6320006fc9b5becc6d31c4c0cfe": {
    "meta": {
      "command": "zrem",
      "name": "key member [member ...]",
      "text": "Remove one or more members from a sorted set",
      "time": "2024-04-23 23:21:22.578",
      "type": "sorted_set"
    }
  },
  "14f802e1fba977727845e8872c1743a7": {
    "meta": {
      "command": "keys",
      "name": "pattern",
      "text": "Find all keys matching the given pattern",
      "time": "2024-04-23 23:11:04.672",
      "type": "generic"
    }
  },
  "1c1088a257b3300ca0218220a242550a": {
    "meta": {
      "command": "flushall",
      "name": "[ASYNC]",
      "text": "Remove all keys from all databases",
      "time": "2024-04-23 23:17:37.854",
      "type": "server"
    }
  },
  "1c5394341ad24ce4878efeaeb8399a02": {
    "meta": {
      "command": "lpushx",
      "name": "key value",
      "text": "Prepend a value to a list, only if the list exists",
      "time": "2024-04-23 23:11:18.874",
      "type": "list"
    }
  },
  "1c7261ddfa254f27ea20ece8e4f573fe": {
    "meta": {
      "command": "georadiusbymember",
      "name": "key member radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]",
      "text": "Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member",
      "time": "2024-04-23 23:17:55.332",
      "type": "geo"
    }
  },
  "1dccadfed7bcbb036c56a4afb97e906f": {
    "meta": {
      "command": "command",
      "name": "-",
      "text": "Get array of Redis command details",
      "time": "2024-04-23 23:17:04.452",
      "type": "server"
    }
  },
  "1ea1ad411f8052fc0e5e5b7683029793": {
    "meta": {
      "command": "incrbyfloat",
      "name": "key increment",
      "text": "Increment the float value of a key by the given amount",
      "time": "2024-04-23 23:18:57.388",
      "type": "string"
    }
  },
  "20b36afdb6e49e5c7780e5bea170baaa": {
    "meta": {
      "command": "lrange",
      "name": "key start stop",
      "text": "Get a range of elements from a list",
      "time": "2024-04-23 23:11:22.124",
      "type": "list"
    }
  },
  "21d24a6715890742894cec0ea3e778e6": {
    "meta": {
      "command": "pfdebug",
      "time": "2024-04-24 08:11:35.312",
      "type": "internal"
    }
  },
  "2245023265ae4cf87d02c8b6ba991139": {
    "meta": {
      "command": "config",
      "time": "2024-04-24 00:02:38.645",
      "type": "command"
    }
  },
  "22884db148f0ffb0d830ba431102b0b5": {
    "meta": {
      "command": "module",
      "time": "2024-04-24 00:03:31.944",
      "type": "command"
    }
  },
  "22dad76c0293b7e147642d9bc72f078e": {
    "meta": {
      "command": "smove",
      "name": "source destination member",
      "text": "Move a member from one set to another",
      "time": "2024-04-23 23:14:03.527",
      "type": "set"
    }
  },
  "231c912a2c129ab519500935c2a5008e": {
    "meta": {
      "command": "replconf",
      "time": "2024-04-24 00:07:25.919",
      "type": "internal"
    }
  },
  "233a42fcde0dbc41ab7d35df63e534a4": {
    "meta": {
      "command": "sunionstore",
      "name": "destination key [key ...]",
      "text": "Add multiple sets and store the resulting set in a key",
      "time": "2024-04-23 23:20:02.721",
      "type": "set"
    }
  },
  "253bdb5287142d7f31aa73cccdeff3c3": {
    "meta": {
      "command": "msetnx",
      "name": "key value [key value ...]",
      "text": "Set multiple keys to multiple values, only if none of the keys exist",
      "time": "2024-04-23 23:11:46.123",
      "type": "string"
    }
  },
  "257930f8894ee93a46ae0e2d557ad022": {
    "meta": {
      "command": "bzpopmin",
      "name": "key [key ...] timeout",
      "text": "Remove and return the member with the lowest score from one or more sorted sets, or block until one is available",
      "time": "2024-04-23 23:47:12.980",
      "type": "sorted_set"
    }
  },
  "25ad770559ad4f0ea4f02ed239edf011": {
    "meta": {
      "command": "pfmerge",
      "name": "destkey sourcekey [sourcekey ...]",
      "text": "Merge N different HyperLogLogs into a single one.",
      "time": "2024-04-23 23:12:06.627",
      "type": "hyperloglog"
    }
  },
  "29a7e96467b69a9f5a93332e29e9b0de": {
    "meta": {
      "command": "role",
      "name": "-",
      "text": "Return the role of the instance in the context of replication",
      "time": "2024-04-23 23:09:11.566",
      "type": "server"
    }
  },
  "2d5ab0f04e5c4a4ea565e6c9772330c0": {
    "meta": {
      "command": "zcard",
      "name": "key",
      "text": "Get the number of members in a sorted set",
      "time": "2024-04-23 23:20:54.370",
      "type": "sorted_set"
    }
  },
  "2ea7fe2bd051ec076a226b7dab76aaa3": {
    "meta": {
      "command": "readwrite",
      "name": "-",
      "text": "Disables read queries for a connection to a cluster replica node",
      "time": "2024-04-23 23:40:50.174",
      "type": "cluster"
    }
  },
  "2eed1fe0db36d674643b5f84d2adf46e": {
    "meta": {
      "command": "eval",
      "name": "script numkeys key [key ...] arg [arg ...]",
      "text": "Execute a Lua script server side",
      "time": "2024-04-24 07:58:09.024",
      "type": "scripting"
    }
  },
  "3205c0ded576131ea255ad2bd38b0fb2": {
    "meta": {
      "command": "script",
      "time": "2024-04-24 07:58:58.246",
      "type": "scripting"
    }
  },
  "3287b13265a24a16005b0f940b246146": {
    "meta": {
      "command": "xpending",
      "name": "key group [start end count] [consumer]",
      "text": "Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.",
      "time": "2024-04-23 23:45:03.477",
      "type": "stream"
    }
  },
  "333d0b29b168413475894dc222d02d85": {
    "meta": {
      "command": "decrby",
      "name": "key decrement",
      "text": "Decrement the integer value of a key by the given number",
      "time": "2024-04-23 23:17:18.886",
      "type": "string"
    }
  },
  "334c99501d3735f4dd09e66b93545236": {
    "meta": {
      "command": "zrevrangebylex",
      "name": "key max min [LIMIT offset count]",
      "text": "Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.",
      "time": "2024-04-24 07:51:25.776",
      "type": "sorted_set"
    }
  },
  "336ebbb2179beaa7340a4f1620f3af40": {
    "meta": {
      "command": "readonly",
      "name": "-",
      "text": "Enables read queries for a connection to a cluster replica node",
      "time": "2024-04-23 23:40:42.121",
      "type": "cluster"
    }
  },
  "3734a903022249b3010be1897042568e": {
    "meta": {
      "command": "move",
      "name": "key db",
      "text": "Move a key to another database",
      "time": "2024-04-23 23:19:26.284",
      "type": "generic"
    }
  },
  "38cebba60034d701a8b4e73f856c9ad8": {
    "meta": {
      "command": "xdel",
      "name": "key ID [ID ...]",
      "text": "Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist.",
      "time": "2024-04-23 23:20:31.372",
      "type": "stream"
    }
  },
  "39db6883a8086a4d01d5d1eb5da02cb6": {
    "meta": {
      "command": "brpoplpush",
      "name": "source destination timeout",
      "text": "Pop a value from a list, push it to another list and return it; or block until one is available",
      "time": "2024-04-23 23:16:59.402",
      "type": "list"
    }
  },
  "3b142efa33ad22af4aca82dcee60fec0": {
    "meta": {
      "command": "punsubscribe",
      "name": "[pattern [pattern ...]]",
      "text": "Stop listening for messages posted to channels matching the given patterns",
      "time": "2024-04-23 23:12:49.725",
      "type": "pubsub"
    }
  },
  "3b16bda0567ec072524564072cb5cc5d": {
    "meta": {
      "command": "decr",
      "name": "key",
      "text": "Decrement the integer value of a key by one",
      "time": "2024-04-23 23:17:16.387",
      "type": "string"
    }
  },
  "3c59a91d773d3f91e94d1c157044083a": {
    "meta": {
      "command": "incr",
      "name": "key",
      "text": "Increment the integer value of a key by one",
      "time": "2024-04-23 23:18:51.689",
      "type": "string"
    }
  },
  "3da5de67b1e6c66878c9ce0965598e7a": {
    "meta": {
      "command": "zpopmax",
      "name": "key [count]",
      "text": "Remove and return members with the highest scores in a sorted set",
      "time": "2024-04-23 23:21:06.477",
      "type": "sorted_set"
    }
  },
  "3efda5ea59a8c21cf32f35ae6b83a5d4": {
    "meta": {
      "command": "geoadd",
      "name": "key longitude latitude member [longitude latitude member ...]",
      "text": "Add one or more geospatial items in the geospatial index represented using a sorted set",
      "time": "2024-04-23 23:17:43.037",
      "type": "geo"
    }
  },
  "42b90196b487c54069097a68fe98ab6f": {
    "meta": {
      "command": "post",
      "time": "2024-04-24 08:15:29.615",
      "type": "internal"
    }
  },
  "42c6a033f0370fb10cf116b02c09a02e": {
    "meta": {
      "command": "setrange",
      "name": "key offset value",
      "text": "Overwrite part of a string at key starting at the specified offset",
      "time": "2024-04-23 23:13:44.882",
      "type": "string"
    }
  },
  "43781db5c40ecc39fd718685594f0956": {
    "meta": {
      "command": "save",
      "name": "-",
      "text": "Synchronously save the dataset to disk",
      "time": "2024-04-23 23:08:52.416",
      "type": "server"
    }
  },
  "4492fa7eab2899f2ca42cca3798e2b5a": {
    "meta": {
      "command": "host:",
      "time": "2024-04-24 08:15:23.930",
      "type": "internal"
    }
  },
  "464d3fc986429b6da9bc1b6706fa2cc7": {
    "meta": {
      "command": "sscan",
      "name": "key cursor [MATCH pattern] [COUNT count]",
      "text": "Incrementally iterate Set elements",
      "time": "2024-04-23 23:14:22.227",
      "type": "set"
    }
  },
  "465844e9e04f6e65a875736799fda82f": {
    "meta": {
      "command": "hlen",
      "name": "key",
      "text": "Get the number of fields in a hash",
      "time": "2024-04-23 23:18:27.303",
      "type": "hash"
    }
  },
  "47557a591e63e20915d88344977dff01": {
    "meta": {
      "command": "pexpire",
      "name": "key milliseconds",
      "text": "Set a key's time to live in milliseconds",
      "time": "2024-04-23 23:11:54.330",
      "type": "generic"
    }
  },
  "47eac7949818a87511120d27edf564b2": {
    "meta": {
      "command": "zunionstore",
      "name": "destination numkeys key [key ...] [WEIGHTS weight] [AGGREGATE SUM|MIN|MAX]",
      "text": "Add multiple sorted sets and store the resulting sorted set in a new key",
      "time": "2024-04-23 23:21:53.594",
      "type": "sorted_set"
    }
  },
  "48081baf505a199be2a4dcb847d179ec": {
    "meta": {
      "command": "pfadd",
      "name": "key element [element ...]",
      "text": "Adds the specified elements to the specified HyperLogLog.",
      "time": "2024-04-23 23:12:00.281",
      "type": "hyperloglog"
    }
  },
  "49256b9819abacbb8e6e031a03abe81b": {
    "meta": {
      "command": "wait",
      "name": "numreplicas timeout",
      "text": "Wait for the synchronous replication of all the write commands sent in the context of the current connection",
      "time": "2024-04-24 07:59:44.475",
      "type": "generic"
    }
  },
  "4b9d19d2e5fdd93d274a8036f7a48212": {
    "meta": {
      "command": "slowlog",
      "time": "2024-04-24 00:05:24.395",
      "type": "command"
    }
  },
  "4e33b2b65bda7f17fcbf8efdadb1606f": {
    "meta": {
      "command": "setnx",
      "name": "key value",
      "text": "Set the value of a key, only if the key does not exist",
      "time": "2024-04-23 23:13:40.881",
      "type": "string"
    }
  },
  "4f0fc2be4365cb83a13d5a43c76d8089": {
    "meta": {
      "command": "lpop",
      "name": "key",
      "text": "Remove and get the first element in a list",
      "time": "2024-04-23 23:11:11.830",
      "type": "list"
    }
  },
  "4f367b3b7b473c0047155bc381ce3191": {
    "meta": {
      "command": "zrange",
      "name": "key start stop [WITHSCORES]",
      "text": "Return a range of members in a sorted set, by index",
      "time": "2024-04-23 23:21:11.442",
      "type": "sorted_set"
    }
  },
  "4f893ee24950069dd823e083338a456d": {
    "meta": {
      "command": "subscribe",
      "name": "channel [channel ...]",
      "text": "Listen for messages published to the given channels",
      "time": "2024-04-23 23:14:28.384",
      "type": "pubsub"
    }
  },
  "5186065dd6e2a8949c3d79e6435fcc37": {
    "meta": {
      "command": "srandmember",
      "name": "key [count]",
      "text": "Get one or multiple random members from a set",
      "time": "2024-04-23 23:14:14.876",
      "type": "set"
    }
  },
  "52c28e6353dcd20ebda4b5fd3711e415": {
    "meta": {
      "command": "brpop",
      "name": "key [key ...] timeout",
      "text": "Remove and get the last element in a list, or block until one is available",
      "time": "2024-04-23 23:16:56.602",
      "type": "list"
    }
  },
  "52fb3679b07eb74d90784e612ca5cb30": {
    "meta": {
      "command": "exec",
      "name": "-",
      "text": "Execute all commands issued after MULTI",
      "time": "2024-04-23 23:43:07.959",
      "type": "transactions"
    }
  },
  "5309237df6038f46778ccfc7575f566f": {
    "meta": {
      "command": "hexists",
      "name": "key field",
      "text": "Determine if a hash field exists",
      "time": "2024-04-23 23:18:10.287",
      "type": "hash"
    }
  },
  "53aefec08170b2ebed981a0a86d0dbe0": {
    "meta": {
      "command": "scan",
      "name": "cursor [MATCH pattern] [COUNT count]",
      "text": "Incrementally iterate the keys space",
      "time": "2024-04-23 23:13:21.778",
      "type": "generic"
    }
  },
  "53f9cfc5da2e4d760aaee8e0771d656f": {
    "meta": {
      "command": "bgrewriteaof",
      "name": "-",
      "text": "Asynchronously rewrite the append-only file",
      "time": "2024-04-23 23:46:54.620",
      "type": "server"
    }
  },
  "55b1a07dd0b8ae6ce90dbfa769f6ba6f": {
    "meta": {
      "command": "slaveof",
      "name": "host port",
      "text": "Make the server a replica of another instance, or promote it as master. Deprecated starting with Redis 5. Use REPLICAOF instead.",
      "time": "2024-04-23 23:39:58.956",
      "type": "server"
    }
  },
  "58a43af48c6b9a935fb8404010173a3b": {
    "meta": {
      "command": "xread",
      "name": "[COUNT count] [BLOCK milliseconds] STREAMS key [key ...] ID [ID ...]",
      "text": "Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block.",
      "time": "2024-04-23 23:20:41.720",
      "type": "stream"
    }
  },
  "5924f03a95ee6f7277e5bdd1e81b8fdc": {
    "meta": {
      "command": "shutdown",
      "name": "[NOSAVE|SAVE]",
      "text": "Synchronously save the dataset to disk and then shut down the server",
      "time": "2024-04-23 23:13:47.481",
      "type": "server"
    }
  },
  "599dcce2998a6b40b1e38e8c6006cb0a": {
    "meta": {
      "command": "type",
      "name": "key",
      "text": "Determine the type stored at key",
      "time": "2024-04-23 23:20:15.876",
      "type": "generic"
    }
  },
  "5a87246efcf36f6b900787b78b7ce096": {
    "meta": {
      "command": "geohash",
      "name": "key member [member ...]",
      "text": "Returns members of a geospatial index as standard geohash strings",
      "time": "2024-04-23 23:10:58.077",
      "type": "geo"
    }
  },
  "5b2f8d1cd1bde9c4ff3fea49f09cd5c1": {
    "meta": {
      "command": "getset",
      "name": "key value",
      "text": "Set the string value of a key and return its old value",
      "time": "2024-04-23 23:18:05.234",
      "type": "string"
    }
  },
  "5c7b5be7ca206aa32e06ab74904eeddb": {
    "meta": {
      "command": "asking",
      "time": "2024-04-24 00:08:03.700",
      "type": "internal"
    }
  },
  "5ca4b722707013b233e526659583df95": {
    "meta": {
      "command": "persist",
      "name": "key",
      "text": "Remove the expiration from a key",
      "time": "2024-04-23 23:11:51.024",
      "type": "generic"
    }
  },
  "5e8ce2358e65e8624ba20e3aab33d99e": {
    "meta": {
      "command": "psync",
      "time": "2024-04-24 08:18:10.867",
      "type": "internal"
    }
  },
  "609b20ac52ba397f562353dca82a4222": {
    "meta": {
      "command": "hincrbyfloat",
      "name": "key field increment",
      "text": "Increment the float value of a hash field by the given amount",
      "time": "2024-04-23 23:18:21.885",
      "type": "hash"
    }
  },
  "6120d99a338e47bec36bd498393aac45": {
    "meta": {
      "command": "hincrby",
      "name": "key field increment",
      "text": "Increment the integer value of a hash field by the given number",
      "time": "2024-04-23 23:18:18.938",
      "type": "hash"
    }
  },
  "62608e08adc29a8d6dbc9754e659f125": {
    "meta": {
      "command": "client",
      "time": "2024-04-24 00:02:17.464",
      "type": "command"
    }
  },
  "63ad9d34f3503826e5f649ae6b7ac92c": {
    "meta": {
      "command": "sync",
      "time": "2024-04-24 08:18:23.616",
      "type": "internal"
    }
  },
  "67a5a5a79b5d2a367725ef56c1d5aa49": {
    "meta": {
      "command": "geodist",
      "name": "key member1 member2 [unit]",
      "text": "Returns the distance between two members of a geospatial index",
      "time": "2024-04-23 23:17:45.985",
      "type": "geo"
    }
  },
  "68781627018b0dba9d3f3f70fe56796d": {
    "meta": {
      "command": "getbit",
      "name": "key offset",
      "text": "Returns the bit value at offset in the string value stored at key",
      "time": "2024-04-23 23:52:03.336",
      "type": "string"
    }
  },
  "694c28634276a627e2d8314a1d0ed3d4": {
    "meta": {
      "command": "getrange",
      "name": "key start end",
      "text": "Get a substring of the string stored at a key",
      "time": "2024-04-23 23:18:01.203",
      "type": "string"
    }
  },
  "695630cfc5eb92580fb3e76a0c790e63": {
    "meta": {
      "command": "unlink",
      "name": "key [key ...]",
      "text": "Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.",
      "time": "2024-04-23 23:20:18.543",
      "type": "generic"
    }
  },
  "6a58980aad534c8e198c39e98e711d01": {
    "meta": {
      "command": "xrange",
      "name": "key start end [COUNT count]",
      "text": "Return a range of elements in a stream, with IDs matching the specified IDs interval",
      "time": "2024-04-23 23:20:38.827",
      "type": "stream"
    }
  },
  "6b0a4731da798e78dff80770dc286407": {
    "meta": {
      "command": "zrank",
      "name": "key member",
      "text": "Determine the index of a member in a sorted set",
      "time": "2024-04-23 23:21:19.344",
      "type": "sorted_set"
    }
  },
  "6b610e40f92e4ef028c10782f09e30ed": {
    "meta": {
      "command": "xlen",
      "name": "key",
      "text": "Return the number of entires in a stream",
      "time": "2024-04-23 23:20:35.019",
      "type": "stream"
    }
  },
  "6dcaf449415765e1fc8503e76318736b": {
    "meta": {
      "command": "srem",
      "name": "key member [member ...]",
      "text": "Remove one or more members from a set",
      "time": "2024-04-23 23:14:17.883",
      "type": "set"
    }
  },
  "6e3d8d4d91320c316d330da3a89b1b2d": {
    "meta": {
      "command": "mget",
      "name": "key [key ...]",
      "text": "Get the values of all the given keys",
      "time": "2024-04-23 23:11:37.730",
      "type": "string"
    }
  },
  "70027726f700dda2564962b47d428784": {
    "meta": {
      "command": "zrevrangebyscore",
      "name": "key max min [WITHSCORES] [LIMIT offset count]",
      "text": "Return a range of members in a sorted set, by score, with scores ordered from high to low",
      "time": "2024-04-23 23:21:40.595",
      "type": "sorted_set"
    }
  },
  "70f68bb2f748b85de6526bfe236ea1e9": {
    "meta": {
      "command": "discard",
      "name": "-",
      "text": "Discard all commands issued after MULTI",
      "time": "2024-04-23 23:43:22.360",
      "type": "transactions"
    }
  },
  "73d3a702db472629f27b06ac8f056476": {
    "meta": {
      "command": "strlen",
      "name": "key",
      "text": "Get the length of the value stored in a key",
      "time": "2024-04-23 23:14:25.477",
      "type": "string"
    }
  },
  "7441b7c445145f0b6fba8cf92996fc6e": {
    "meta": {
      "command": "incrby",
      "name": "key increment",
      "text": "Increment the integer value of a key by the given amount",
      "time": "2024-04-23 23:18:54.136",
      "type": "string"
    }
  },
  "781101a7da3e35e5cd280b852c00c1fd": {
    "meta": {
      "command": "hsetnx",
      "name": "key field value",
      "text": "Set the value of a hash field, only if the field does not exist",
      "time": "2024-04-23 23:18:42.737",
      "type": "hash"
    }
  },
  "7883a7305bcbd394f768e04b9e800f53": {
    "meta": {
      "command": "latency",
      "time": "2024-04-24 08:09:23.956",
      "type": "server"
    }
  },
  "7976297f207f4cbbc7b7bd6d4ecdaf04": {
    "meta": {
      "command": "georadiusbymember_ro",
      "time": "2024-04-24 08:14:35.879",
      "type": "geo"
    }
  },
  "7a0e0ee3f2ab062aabde6166dff2cedb": {
    "meta": {
      "command": "hscan",
      "name": "key cursor [MATCH pattern] [COUNT count]",
      "text": "Incrementally iterate hash fields and associated values",
      "time": "2024-04-23 23:24:24.847",
      "type": "hash"
    }
  },
  "7fcb5c6bbe96c34cd3837b2e561eb6a2": {
    "meta": {
      "command": "hget",
      "name": "key field",
      "text": "Get the value of a hash field",
      "time": "2024-04-23 23:18:12.886",
      "type": "hash"
    }
  },
  "802ee5d94a54f1b6801fee70c76eb72a": {
    "meta": {
      "command": "swapdb",
      "name": "index index",
      "text": "Swaps two Redis databases",
      "time": "2024-04-23 23:47:57.582",
      "type": "connection"
    }
  },
  "81354c7446af086b46c3581caccc3eda": {
    "meta": {
      "command": "linsert",
      "name": "key BEFORE|AFTER pivot value",
      "text": "Insert an element before or after another element in a list",
      "time": "2024-04-23 23:43:54.792",
      "type": "list"
    }
  },
  "82979564efd472dd3b3dfd99f95c96a1": {
    "meta": {
      "command": "replicaof",
      "name": "host port",
      "text": "Make the server a replica of another instance, or promote it as master.",
      "time": "2024-04-23 23:40:25.302",
      "type": "server"
    }
  },
  "852672fd05f7540e7a00100a6437a9ed": {
    "meta": {
      "command": "zremrangebylex",
      "name": "key min max",
      "text": "Remove all members in a sorted set between the given lexicographical range",
      "time": "2024-04-24 07:51:22.134",
      "type": "sorted_set"
    }
  },
  "85c9325f34eb0655052de6d821cbf94c": {
    "meta": {
      "command": "setex",
      "name": "key seconds value",
      "text": "Set the value and expiration of a key",
      "time": "2024-04-23 23:13:37.926",
      "type": "string"
    }
  },
  "8ac11c3c2dd78ee19bcb7c4dea1cd177": {
    "meta": {
      "command": "renamenx",
      "name": "key newkey",
      "text": "Rename a key, only if the new key does not exist",
      "time": "2024-04-23 23:13:08.231",
      "type": "generic"
    }
  },
  "8c7ad268bccc4733076719cfacc4af0c": {
    "meta": {
      "command": "zrangebyscore",
      "name": "key min max [WITHSCORES] [LIMIT offset count]",
      "text": "Return a range of members in a sorted set, by score",
      "time": "2024-04-23 23:22:22.979",
      "type": "sorted_set"
    }
  },
  "8d4897dd081f44d5743b385db106b55e": {
    "meta": {
      "command": "bitop",
      "name": "operation destkey key [key ...]",
      "text": "Perform bitwise operations between strings",
      "time": "2024-04-24 08:03:04.816",
      "type": "string"
    }
  },
  "90ec922e613070022761300109035585": {
    "meta": {
      "command": "sadd",
      "name": "key member [member ...]",
      "text": "Add one or more members to a set",
      "time": "2024-04-23 23:08:56.015",
      "type": "set"
    }
  },
  "937cbee423e4790e165f0aba3d46ae49": {
    "meta": {
      "command": "xack",
      "name": "key group ID [ID ...]",
      "text": "Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL.",
      "time": "2024-04-23 23:22:37.428",
      "type": "stream"
    }
  },
  "9516dfb15f51c7ee19a4d46b8c0dbe1d": {
    "meta": {
      "command": "append",
      "name": "key value",
      "text": "Append a value to a key",
      "time": "2024-04-23 23:15:29.418",
      "type": "string"
    }
  },
  "95268e95a31b517cb3fed1654bec363c": {
    "meta": {
      "command": "xreadgroup",
      "name": "GROUP group consumer [COUNT count] [BLOCK milliseconds] STREAMS key [key ...] ID [ID ...]",
      "text": "Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block.",
      "time": "2024-04-23 23:39:25.150",
      "type": "stream"
    }
  },
  "97fb619fcf02fb54ca4588223e77e93e": {
    "meta": {
      "command": "zscore",
      "name": "key member",
      "text": "Get the score associated with the given member in a sorted set",
      "time": "2024-04-23 23:21:50.972",
      "type": "sorted_set"
    }
  },
  "99938282f04071859941e18f16efcf42": {
    "meta": {
      "command": "select",
      "name": "index",
      "text": "Change the selected database for the current connection",
      "time": "2024-04-23 23:13:32.125",
      "type": "connection"
    }
  },
  "9b6d0bb3102b87fae57bc4a39149518e": {
    "meta": {
      "command": "publish",
      "name": "channel message",
      "text": "Post a message to a channel",
      "time": "2024-04-23 23:12:36.978",
      "type": "pubsub"
    }
  },
  "9f4b7756f4544952d00677a5be25b70f": {
    "meta": {
      "command": "xtrim",
      "name": "key MAXLEN [~] count",
      "text": "Trims the stream to (approximately if '~' is passed) a certain size",
      "time": "2024-04-23 23:20:48.277",
      "type": "stream"
    }
  },
  "9fa4c4d075506db85427e52c9ad818bd": {
    "meta": {
      "command": "lastsave",
      "name": "-",
      "text": "Get the UNIX time stamp of the last successful save to disk",
      "time": "2024-04-23 23:41:30.825",
      "type": "server"
    }
  },
  "a013658e30387f7a60cdaf0acf26850d": {
    "meta": {
      "command": "unsubscribe",
      "name": "[channel [channel ...]]",
      "text": "Stop listening for messages posted to the given channels",
      "time": "2024-04-23 23:20:21.344",
      "type": "pubsub"
    }
  },
  "a0ba9979dc4e48c7c78b535a7d9b7dc7": {
    "meta": {
      "command": "psetex",
      "name": "key milliseconds value",
      "text": "Set the value and expiration in milliseconds of a key",
      "time": "2024-04-23 23:12:22.180",
      "type": "string"
    }
  },
  "a3af2d1fe72e1afdfa631c8ee7d239e6": {
    "meta": {
      "command": "xgroup",
      "name": "[CREATE key groupname id-or-$] [SETID key id-or-$] [DESTROY key groupname] [DELCONSUMER key groupname consumername]",
      "text": "Create, destroy, and manage consumer groups.",
      "time": "2024-04-23 23:31:43.733",
      "type": "stream"
    }
  },
  "a6f872bc8579a171fa1522d298851f21": {
    "meta": {
      "command": "pttl",
      "name": "key",
      "text": "Get the time to live for a key in milliseconds",
      "time": "2024-04-23 23:12:27.731",
      "type": "generic"
    }
  },
  "a8cfde6331bd59eb2ac96f8911c4b666": {
    "meta": {
      "command": "object",
      "time": "2024-04-24 00:08:42.662",
      "type": "command"
    }
  },
  "ab0e77ecf8c2ce8e87cdd42548135361": {
    "meta": {
      "command": "hset",
      "name": "key field value",
      "text": "Set the string value of a hash field",
      "time": "2024-04-23 23:18:40.238",
      "type": "hash"
    }
  },
  "ac346844583cf63bbf28c84c8392104b": {
    "meta": {
      "command": "smembers",
      "name": "key",
      "text": "Get all the members in a set",
      "time": "2024-04-23 23:14:00.026",
      "type": "set"
    }
  },
  "ad42f6697b035b7580e4fef93be20b4d": {
    "meta": {
      "command": "debug",
      "time": "2024-04-24 00:00:09.137",
      "type": "command"
    }
  },
  "ad9211986cfaebf9eb7d3d343dd2c0b6": {
    "meta": {
      "command": "flushdb",
      "name": "[ASYNC]",
      "text": "Remove all keys from the current database",
      "time": "2024-04-23 23:17:40.534",
      "type": "server"
    }
  },
  "ae73e515ff7941d628af8e17d6dc4224": {
    "meta": {
      "command": "bzpopmax",
      "name": "key [key ...] timeout",
      "text": "Remove and return the member with the highest score from one or more sorted sets, or block until one is available",
      "time": "2024-04-23 23:47:09.230",
      "type": "sorted_set"
    }
  },
  "af2f870f855dabc019b8d6eac557219b": {
    "meta": {
      "command": "zrangebylex",
      "name": "key min max [LIMIT offset count]",
      "text": "Return a range of members in a sorted set, by lexicographical range",
      "time": "2024-04-24 07:51:18.386",
      "type": "sorted_set"
    }
  },
  "b03d3092c338772b01ef99591c88d376": {
    "meta": {
      "command": "bitfield",
      "name": "key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]",
      "text": "Perform arbitrary bitfield integer operations on strings",
      "time": "2024-04-24 08:02:51.915",
      "type": "string"
    }
  },
  "b3e0c1addc28208828504aba42a04a18": {
    "meta": {
      "command": "zremrangebyscore",
      "name": "key min max",
      "text": "Remove all members in a sorted set within the given scores",
      "time": "2024-04-23 23:21:34.421",
      "type": "sorted_set"
    }
  },
  "b522b8d9f46ea1558a812881779a585f": {
    "meta": {
      "command": "pfcount",
      "name": "key [key ...]",
      "text": "Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).",
      "time": "2024-04-23 23:12:03.079",
      "type": "hyperloglog"
    }
  },
  "b5eda0a74558a342cf659187f06f746f": {
    "meta": {
      "command": "get",
      "name": "key",
      "text": "Get the value of a key",
      "time": "2024-04-23 23:17:58.335",
      "type": "string"
    }
  },
  "b749e46e873e127d3f7459c03470e318": {
    "meta": {
      "command": "zadd",
      "name": "key [NX|XX] [CH] [INCR] score member [score member ...]",
      "text": "Add one or more members to a sorted set, or update its score if it already exists",
      "time": "2024-04-23 23:20:51.627",
      "type": "sorted_set"
    }
  },
  "b7db95e68de2a2c933c36429fb9c6c68": {
    "meta": {
      "command": "sdiffstore",
      "name": "destination key [key ...]",
      "text": "Subtract multiple sets and store the resulting set in a key",
      "time": "2024-04-23 23:13:28.075",
      "type": "set"
    }
  },
  "b83aca7148ca4a9a779c4da26e167275": {
    "meta": {
      "command": "bgsave",
      "name": "-",
      "text": "Asynchronously save the dataset to disk",
      "time": "2024-04-23 23:15:38.535",
      "type": "server"
    }
  },
  "b96ba508e3690f5168e4b0e68b15b178": {
    "meta": {
      "command": "touch",
      "name": "key [key ...]",
      "text": "Alters the last access time of a key(s). Returns the number of existing keys specified.",
      "time": "2024-04-23 23:20:10.621",
      "type": "generic"
    }
  },
  "b9c6607cecb6da579c09d61bf9334785": {
    "meta": {
      "command": "rpop",
      "name": "key",
      "text": "Remove and get the last element in a list",
      "time": "2024-04-23 23:09:08.817",
      "type": "list"
    }
  },
  "b9ef165b255673dde47bff07f4390fb1": {
    "meta": {
      "command": "dump",
      "name": "key",
      "text": "Return a serialized version of the value stored at the specified key.",
      "time": "2024-04-23 23:24:35.199",
      "type": "generic"
    }
  },
  "ba0bf02f22e282601fc419ef0691e42a": {
    "meta": {
      "command": "bitcount",
      "name": "key [start end]",
      "text": "Count set bits in a string",
      "time": "2024-04-23 23:50:55.332",
      "type": "string"
    }
  },
  "bb2ac0b8da1f64a3498af147ba43fc10": {
    "meta": {
      "command": "restore",
      "name": "key ttl serialized-value [REPLACE]",
      "text": "Create a key using the provided serialized value, previously obtained using DUMP.",
      "time": "2024-04-23 23:44:25.677",
      "type": "generic"
    }
  },
  "bbd725f2fb8a6cbe36c39a1d45486a0c": {
    "meta": {
      "command": "hdel",
      "name": "key field [field ...]",
      "text": "Delete one or more hash fields",
      "time": "2024-04-23 23:18:07.687",
      "type": "hash"
    }
  },
  "bc5573d8bedbe4141ffcc02b1c399961": {
    "meta": {
      "command": "zrevrange",
      "name": "key start stop [WITHSCORES]",
      "text": "Return a range of members in a sorted set, by index, with scores ordered from high to low",
      "time": "2024-04-23 23:21:37.522",
      "type": "sorted_set"
    }
  },
  "bd70f54f4e18b55c026bbcf453646313": {
    "meta": {
      "command": "bitpos",
      "name": "key bit [start] [end]",
      "text": "Find first bit set or clear in a string",
      "time": "2024-04-24 00:14:00.916",
      "type": "string"
    }
  },
  "bd72667b3d0d45a66c2d495e4d5993a8": {
    "meta": {
      "command": "spop",
      "name": "key [count]",
      "text": "Remove and return one or multiple random members from a set",
      "time": "2024-04-23 23:14:10.975",
      "type": "set"
    }
  },
  "bd91447872deeb42ff0e5c90e74094d0": {
    "meta": {
      "command": "xadd",
      "name": "key ID field string [field string ...]",
      "text": "Appends a new entry to a stream",
      "time": "2024-04-23 23:20:27.622",
      "type": "stream"
    }
  },
  "bdf147a5d70a753a05a0eaf9dc725b78": {
    "meta": {
      "command": "sismember",
      "name": "key member",
      "text": "Determine if a given value is a member of a set",
      "time": "2024-04-23 23:13:55.983",
      "type": "set"
    }
  },
  "be288047e63f0fe3a89ce70ba04c4efd": {
    "meta": {
      "command": "sinter",
      "name": "key [key ...]",
      "text": "Intersect multiple sets",
      "time": "2024-04-23 23:13:50.276",
      "type": "set"
    }
  },
  "c120019a96c8627d7a494edd8bdacf29": {
    "meta": {
      "command": "pfselftest",
      "time": "2024-04-24 08:12:02.976",
      "type": "internal"
    }
  },
  "c42b8fa460911025bd2a9717e037e52c": {
    "meta": {
      "command": "xinfo",
      "name": "[CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]",
      "text": "Get information on streams and consumer groups",
      "time": "2024-04-23 23:39:10.851",
      "type": "stream"
    }
  },
  "c431a4425bc56080c868435c8d910f83": {
    "meta": {
      "command": "ttl",
      "name": "key",
      "text": "Get the time to live for a key",
      "time": "2024-04-23 23:20:13.172",
      "type": "generic"
    }
  },
  "c62821f92f139e14b800b7a00799f2cf": {
    "meta": {
      "command": "lrem",
      "name": "key count value",
      "text": "Remove elements from a list",
      "time": "2024-04-23 23:11:25.575",
      "type": "list"
    }
  },
  "c790a1a0190be257ed6572a3875c9c63": {
    "meta": {
      "command": "zlexcount",
      "name": "key min max",
      "text": "Count the number of members in a sorted set between a given lexicographical range",
      "time": "2024-04-24 07:51:09.537",
      "type": "sorted_set"
    }
  },
  "c862df7c0afa31db1727e170358a36a7": {
    "meta": {
      "command": "sinterstore",
      "name": "destination key [key ...]",
      "text": "Intersect multiple sets and store the resulting set in a key",
      "time": "2024-04-23 23:13:53.177",
      "type": "set"
    }
  },
  "c918bef3c3007a7a44cc1ba77e6231d7": {
    "meta": {
      "command": "geopos",
      "name": "key member [member ...]",
      "text": "Returns longitude and latitude of members of a geospatial index",
      "time": "2024-04-23 23:17:48.802",
      "type": "geo"
    }
  },
  "cadc8c8db42409733582cb3e2298ef87": {
    "meta": {
      "command": "sort",
      "name": "key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA] [STORE destination]",
      "text": "Sort the elements in a list, set or sorted set",
      "time": "2024-04-23 23:14:07.677",
      "type": "generic"
    }
  },
  "cadff14699c162998b32361dd4998e84": {
    "meta": {
      "command": "scard",
      "name": "key",
      "text": "Get the number of members in a set",
      "time": "2024-04-23 23:08:47.566",
      "type": "set"
    }
  },
  "caf9b6b99962bf5c2264824231d7a40c": {
    "meta": {
      "command": "info",
      "name": "[section]",
      "text": "Get information and statistics about the server",
      "time": "2024-04-23 23:24:19.597",
      "type": "server"
    }
  },
  "cb060a80cc30ea798294e8153ba0f9a0": {
    "meta": {
      "command": "hmset",
      "name": "key field value [field value ...]",
      "text": "Set multiple hash fields to multiple values",
      "time": "2024-04-23 23:18:36.004",
      "type": "hash"
    }
  },
  "cbb11ed87dc8a95d81400c7f33c7c171": {
    "meta": {
      "command": "echo",
      "name": "message",
      "text": "Echo the given string",
      "time": "2024-04-23 23:17:25.587",
      "type": "connection"
    }
  },
  "cbc187d3a285e9d3be8cd10201d44818": {
    "meta": {
      "command": "hkeys",
      "name": "key",
      "text": "Get all the fields in a hash",
      "time": "2024-04-23 23:18:24.338",
      "type": "hash"
    }
  },
  "cd69b4957f06cd818d7bf3d61980e291": {
    "meta": {
      "command": "memory",
      "time": "2024-04-24 00:02:55.144",
      "type": "command"
    }
  },
  "cd91e7679d575a2c548bd2c889c23b9e": {
    "meta": {
      "command": "expire",
      "name": "key seconds",
      "text": "Set a key's time to live in seconds",
      "time": "2024-04-23 23:17:32.536",
      "type": "generic"
    }
  },
  "cdaeeeba9b4a4c5ebf042c0215a7bb0e": {
    "meta": {
      "command": "set",
      "name": "key value [expiration EX seconds|PX milliseconds] [NX|XX]",
      "text": "Set the string value of a key",
      "time": "2024-04-23 23:13:34.976",
      "type": "string"
    }
  },
  "d2974c96dc96b3f30a6168bcc4b25b02": {
    "meta": {
      "command": "watch",
      "name": "key [key ...]",
      "text": "Watch the given keys to determine execution of the MULTI/EXEC block",
      "time": "2024-04-24 00:09:39.560",
      "type": "transactions"
    }
  },
  "d2bcc286168bf8e040885c5cb7b6df13": {
    "meta": {
      "command": "del",
      "name": "key [key ...]",
      "text": "Delete a key",
      "time": "2024-04-23 23:17:22.403",
      "type": "generic"
    }
  },
  "d544bb3f0950271bcaed7728a515ddaf": {
    "meta": {
      "command": "psubscribe",
      "name": "pattern [pattern ...]",
      "text": "Listen for messages published to channels matching the given patterns",
      "time": "2024-04-23 23:12:16.527",
      "type": "pubsub"
    }
  },
  "d5bd3d1424ab20e752ee2ddf8fbcb8a2": {
    "meta": {
      "command": "xsetid",
      "time": "2024-04-24 08:12:46.963",
      "type": "internal"
    }
  },
  "d7fba04fc8e17bcfc603b318a85b762c": {
    "meta": {
      "command": "rename",
      "name": "key newkey",
      "text": "Rename a key",
      "time": "2024-04-23 23:12:59.877",
      "type": "generic"
    }
  },
  "d99b2755657081c3b2892a88ce222923": {
    "meta": {
      "command": "setbit",
      "name": "key offset value",
      "text": "Sets or clears the bit at offset in the string value stored at key",
      "time": "2024-04-23 23:51:57.452",
      "type": "string"
    }
  },
  "dad5b4967e1e0bc135936170d87e146b": {
    "meta": {
      "command": "evalsha",
      "time": "2024-04-24 07:59:11.326",
      "type": "scripting"
    }
  },
  "dae8aabd9996fbf271f9da63bbe5f59d": {
    "meta": {
      "command": "blpop",
      "name": "key [key ...] timeout",
      "text": "Remove and get the first element in a list, or block until one is available",
      "time": "2024-04-23 23:16:53.683",
      "type": "list"
    }
  },
  "db7f607daa85a6e57be5b61cd0d269b6": {
    "meta": {
      "command": "georadius",
      "name": "key longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]",
      "text": "Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point",
      "time": "2024-04-23 23:17:51.353",
      "type": "geo"
    }
  },
  "db94e402c45a88caa698a2b273e10474": {
    "meta": {
      "command": "zpopmin",
      "name": "key [count]",
      "text": "Remove and return members with the lowest scores in a sorted set",
      "time": "2024-04-23 23:21:08.871",
      "type": "sorted_set"
    }
  },
  "de48f50b1ed50b3af650ce2f31a23606": {
    "meta": {
      "command": "unwatch",
      "name": "-",
      "text": "Forget about all watched keys",
      "time": "2024-04-24 00:09:45.976",
      "type": "transactions"
    }
  },
  "df455b31944bd9d3f85f10c752919d64": {
    "meta": {
      "command": "georadius_ro",
      "time": "2024-04-24 08:14:30.013",
      "type": "geo"
    }
  },
  "df911f0151f9ef021d410b4be5060972": {
    "meta": {
      "command": "ping",
      "name": "[message]",
      "text": "Ping the server",
      "time": "2024-04-23 23:12:11.027",
      "type": "connection"
    }
  },
  "e087923eb5dd1310f5f25ddd5ae5b580": {
    "meta": {
      "command": "exists",
      "name": "key [key ...]",
      "text": "Determine if a key exists",
      "time": "2024-04-23 23:17:29.733",
      "type": "generic"
    }
  },
  "e421d686ef74813c29de181e1ba286d7": {
    "meta": {
      "command": "hvals",
      "name": "key",
      "text": "Get all the values in a hash",
      "time": "2024-04-23 23:18:48.936",
      "type": "hash"
    }
  },
  "e8148da2d4650556bec6cc5cf07e2f7d": {
    "meta": {
      "command": "hgetall",
      "name": "key",
      "text": "Get all the fields and values in a hash",
      "time": "2024-04-23 23:18:15.688",
      "type": "hash"
    }
  },
  "e8ab9f3d0f337aa53ae9b58b4c199666": {
    "meta": {
      "command": "rpushx",
      "name": "key value",
      "text": "Append a value to a list, only if the list exists",
      "time": "2024-04-23 23:08:59.226",
      "type": "list"
    }
  },
  "e9ec69acec15fe24a0a8728c795178c1": {
    "meta": {
      "command": "randomkey",
      "name": "-",
      "text": "Return a random key from the keyspace",
      "time": "2024-04-23 23:12:54.226",
      "type": "generic"
    }
  },
  "ea8f243d9885cf8ce9876a580224fd3c": {
    "meta": {
      "command": "multi",
      "name": "-",
      "text": "Mark the start of a transaction block",
      "time": "2024-04-23 23:43:00.926",
      "type": "transactions"
    }
  },
  "eb28f31eb981af856f5061b837aff18a": {
    "meta": {
      "command": "zscan",
      "name": "key cursor [MATCH pattern] [COUNT count]",
      "text": "Incrementally iterate sorted sets elements and associated scores",
      "time": "2024-04-23 23:21:47.945",
      "type": "sorted_set"
    }
  },
  "eb410368e36a1bce94ed9a1cbbbc085b": {
    "meta": {
      "command": "sunion",
      "name": "key [key ...]",
      "text": "Add multiple sets",
      "time": "2024-04-23 23:14:36.326",
      "type": "set"
    }
  },
  "f0a7b2c12b5df0be65b1c0b82ed492a2": {
    "meta": {
      "command": "xclaim",
      "name": "key group consumer min-idle-time ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT count] [force] [justid]",
      "text": "Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer.",
      "time": "2024-04-23 23:44:59.763",
      "type": "stream"
    }
  },
  "f183fde1c1f409b21fc8463052ca49e5": {
    "meta": {
      "command": "migrate",
      "name": "host port key| destination-db timeout [COPY] [REPLACE] [KEYS key]",
      "text": "Atomically transfer a key from a Redis instance to another one.",
      "time": "2024-04-23 23:36:26.590",
      "type": "generic"
    }
  },
  "f2e66edc329458e330f7fd684263b322": {
    "meta": {
      "command": "sdiff",
      "name": "key [key ...]",
      "text": "Subtract multiple sets",
      "time": "2024-04-23 23:13:25.476",
      "type": "set"
    }
  },
  "f38c221a6b01a00a085a9d9cde3ff35f": {
    "meta": {
      "command": "llen",
      "name": "key",
      "text": "Get the length of a list",
      "time": "2024-04-23 23:11:08.430",
      "type": "list"
    }
  },
  "f40be7f8959450de854dd044002349a3": {
    "meta": {
      "command": "zcount",
      "name": "key min max",
      "text": "Count the members in a sorted set with scores within the given values",
      "time": "2024-04-23 23:20:57.121",
      "type": "sorted_set"
    }
  },
  "f675bbbfcbb138ef91ae98e8ec910366": {
    "meta": {
      "command": "expireat",
      "name": "key timestamp",
      "text": "Set the expiration for a key as a UNIX timestamp",
      "time": "2024-04-23 23:17:35.153",
      "type": "generic"
    }
  },
  "fa53b91ccc1b78668d5af58e1ed3a485": {
    "meta": {
      "command": "auth",
      "name": "password",
      "text": "Authenticate to the server",
      "time": "2024-04-23 23:15:34.401",
      "type": "connection"
    }
  },
  "fb85fb78b0a17d6afd24d378ab0f0d70": {
    "meta": {
      "command": "ltrim",
      "name": "key start stop",
      "text": "Trim a list to the specified range",
      "time": "2024-04-23 23:11:32.776",
      "type": "list"
    }
  },
  "fd0afc07c057ffd51b7fa6c64927e1e8": {
    "meta": {
      "command": "zremrangebyrank",
      "name": "key start stop",
      "text": "Remove all members in a sorted set within the given indexes",
      "time": "2024-04-23 23:21:31.394",
      "type": "sorted_set"
    }
  }
}
